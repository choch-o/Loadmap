extends layout

block content
  header(class='tc pv3 pv3-ns')
    img(src='/images/logo_blackmint.png' width='400')
  form(class='bg-washed-red mw7 center pa4 b--black-10' action='#')
    fieldset(class='cf bn ma0 pa0')
      div(class='cf')
        label(class='clip') Course Name
        input#coursename(class='f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns' placeholder="Search" type='text' value='' name='coursename')
        input#search(class='f6 f5-l button-reset fl pv3 tc bn bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns' value='SEARCH' name='search')
  div#bubble(align='center')

  script(src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js")
  script(src="https://d3js.org/d3.v4.min.js")

  script.


    $('#search').click(function() {
      console.log($('#coursename').val());
      $.ajax({
        url: "/search",
        type: "POST",
        data: { coursename: $('#coursename').val() },
        success: function(data, textStatus, jqXHR) {
          d3.select("svg").remove();
          var diameter = 500,
              format = d3.format(",d"),
              color = d3.scaleOrdinal(d3.schemeCategory20);

          var bubble = d3.pack()
              .size([diameter, diameter])
              .padding(1.5);

          var svg = d3.select("#bubble").append("svg")
              .attr("width", diameter)
              .attr("height", diameter)
              .attr("align", "center")
              .attr("class", "bubble");
                console.log("RECEIVED DATA");
                console.log(data);
                var jsondata = {
                  "name": "flare",
                  "children": data
                }

          var root = d3.hierarchy(classes(jsondata))
            .sum(function(d) { return d.value; })
            .sort(function(a, b) { return b.value - a.value; });

          bubble(root);
          var node = svg.selectAll(".node")
            .data(root.children)
            .enter().append("g")
            .attr("class", "node")
            .attr("transform", function(d) {
              return "translate(" + d.x + "," + d.y + ")";
            });

          node.append("title")
              .text(function(d) { return d.data.className + ": " + format(d.value); });

          node.append("circle")
            .attr("r", function(d) { return d.r; })
            .style("fill", function(d, i) { return color(i); });

          node.append("text")
              .attr("fill", "white")
              .attr("dy", ".3em")
              .style("text-anchor", "middle")
              .text(function(d) { return d.data.className.substring(0, d.r / 3);});
          d3.select(self.frameElement).style("height", diameter + "px");
        },
        error: function(jqXHR, textStatus, errorThrown) {
        }
      });
      function classes(root) {
        var classes = [];

        function recurse(name, node) {
          if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
          else classes.push({packageName: name, className: node.name, value: node.size});
        }

        recurse(null, root);
        return {children: classes};
      }

    });

